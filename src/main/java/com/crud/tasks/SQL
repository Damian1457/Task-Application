CREATE TABLE ISSUESLISTSS(
  ID SERIAL PRIMARY KEY,
  NAME VARCHAR(100)
);

CREATE TABLE ISSUES(
    ID SERIAL PRIMARY KEY,
    ISSUESLISTSS_ID BIGINT UNSIGNED NOT NULL,
    USER_ID BIGINT UNSIGNED NOT NULL,
    SUMMARY VARCHAR(100),
    DESCRIPTION VARCHAR(100),
    FOREIGN KEY (USER_ID) REFERENCES ISSUESLISTSS(ID)
);

INSERT INTO ISSUESLISTSS (ID, NAME)
VALUES (1, 'ToDo');

INSERT INTO ISSUESLISTSS (ID, NAME)
VALUES (2, 'In progress');

INSERT INTO ISSUESLISTSS (ID, NAME)
VALUES (3, 'Done');
COMMIT;


INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'School', 'Go to school');
INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'School', 'Go to school');
INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (1, 'School', 'Go to school');

INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Home', 'Go to Home');
INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Home', 'Go to Home');
INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (2, 'Home', 'Go to Home');

INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Shop', 'Go to Shop');
INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Shop', 'Go to Shop');
INSERT INTO ISSUES (ISSUESLISTSS_ID, SUMMARY, DESCRIPTION)
VALUES (3, 'Shop', 'Go to Shop');
COMMIT;

SELECT * FROM ISSUES;
SELECT * FROM ISSUESLISTSS;
